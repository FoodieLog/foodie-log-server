# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle PR Test

on:
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
  
      # 환경 변수 설정
      - name: set JWT_Key application module
        run: echo "jwt.key=${{secrets.JWT_KEY}}" >> env.yml
        working-directory: ./application/src/main/resources
        
      - name: set JWT_Key management module
        run: echo "jwt.key=${{secrets.JWT_KEY}}" >> env.yml
        working-directory: ./management/src/main/resources
        
      # Gradle dependency 캐싱 설정(테스트 속도 향상)
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      # Gradle wrapper 파일 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
          
      # Gradle test를 실행
      - name: Test with Gradle
        run: ./gradlew --info test
